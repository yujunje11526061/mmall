<?xml version="1.0" encoding="UTF-8"?>
<!--
xmlns部分指导入命名空间,冒号后面的是对明明空间的简写，如xmlns:aop="http://www.springframework.org/schema/aop"，后面就可以用aop:标签名来使用
xsi:schemaLocation部分指明明空间指定的xsd规范文件按，这样后面配置的时候就可以根据规范文件给出智能提示。
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd ">

<!--bean的作用域表示该bean产生的实例在哪个范围内是恒定的，singleton表示全上下文始终恒定一个实例，prototype只该上下文下可以有多个实例-->
<!--bean的单例 不同于 原生类的单例，bean对应一个代理类，scope指的是该代理类的作用域，原生类照样可以通过定义多个bean产生多个实例-->
<!--request:每个请求都会创建一个实例，仅在该请求有效-->
<!--request:每个会话都只会创建一个实例，仅在该会话有效且恒定-->
<!--application:每个servletContext都只会创建一个实例。-->
<!--websocket:每个websocket连接都只会创建一个实例。-->

    <!--默认的scope就是singleton-->
    <bean id="son1" class="actionScope.Son"/>
    <bean id="father1" class="actionScope.Father">
        <property name="son" ref="son1"/>
    </bean>

    <bean id="son2" class="actionScope.Son" scope="prototype"/>
    <bean id="father2" class="actionScope.Father" scope="prototype">
        <property name="son" ref="son2"/>
    </bean>

    <bean id="son3" class="actionScope.Son" scope="singleton"/>
    <bean id="father3" class="actionScope.Father" scope="prototype">
        <property name="son" ref="son3"/>
    </bean>

    <bean id="son4" class="actionScope.Son" scope="prototype"/>
    <bean id="father4" class="actionScope.Father" scope="singleton">
        <property name="son" ref="son4"/>
    </bean>

    <!--lookup-method 元素用于方法注入，name指定获取被依赖对象的方法，bean指定被依赖对象所对应的beanID-->
    <bean id="mother" class="actionScope.Mother" scope="singleton">
        <lookup-method name="getSon" bean="son4"/>
    </bean>
</beans>